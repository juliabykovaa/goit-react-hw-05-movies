{"version":3,"file":"static/js/842.2080fe7e.chunk.js","mappings":"0OA8CA,UA1Ca,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAeC,EAAAA,EAAAA,MAmBrB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,+GAEGC,MACrB,0GACA,CAAEC,OAAQ,MAAOC,QAAS,CAAEC,OAAQ,sBAJlB,cAEdC,EAFc,gBAMDA,EAASC,OANR,OAMdC,EANc,OAOpBX,EAASW,EAAKC,SAPM,kDASpBC,QAAQC,MAAR,MAToB,0DAAH,qDAarBV,GACD,GAAE,KAGD,UAAC,KAAD,YACE,SAAC,KAAD,UAAQ,mBACR,SAAC,KAAD,UACGL,EAAMgB,KAAI,SAAAC,GAAI,OACb,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAoBC,MAAOlB,EAArD,UACE,UAAC,KAAD,YACE,gBACEmB,IAAG,8CAAyCJ,EAAKK,aACjDC,IAAI,KAGLN,EAAKO,UAP2BP,EAAKE,GAD7B,QAetB,C,+JCzCYM,EAASC,EAAAA,EAAAA,GAAH,0BAINC,EAAeD,EAAAA,EAAAA,GAAH,oGAOZE,EAAeF,EAAAA,EAAAA,GAAH,kRAeZG,EAAYH,EAAAA,EAAAA,IAAH,mF,uBC7BtB,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOxB,GAEP,YADAkB,EAAOlB,EAET,CACIuB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Home/Home.jsx","components/Home/Home.styled.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Container, Header, TrendingItem, TrendingList } from './Home.styled';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const homeLocation = useLocation();\n\n  useEffect(() => {\n    const getPopularFilms = async () => {\n      try {\n        const response = await fetch(\n          'https://api.themoviedb.org/3/trending/movie/day?api_key=7e0d37982bd2bc72dd4c2ebad432d351&language=en-US',\n          { method: 'GET', headers: { accept: 'application/json' } }\n        );\n        const data = await response.json();\n        setFilms(data.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getPopularFilms();\n  }, []);\n\n  return (\n    <Container>\n      <Header>Popular Films</Header>\n      <TrendingList>\n        {films.map(film => (\n          <Link to={`/movies/${film.id}`} key={film.id} state={homeLocation}>\n            <TrendingItem>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${film.poster_path}`}\n                alt=\"\"\n              />\n\n              {film.title}\n            </TrendingItem>\n          </Link>\n        ))}\n      </TrendingList>\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"@emotion/styled\";\n\n\nexport const Header = styled.h2`\n\n`\n\nexport const TrendingList = styled.ul`\nlist-style: none;\ndisplay: flex;\ngap: 15px;\nflex-wrap: wrap;\npadding: 0;`\n\nexport const TrendingItem = styled.li`\n  color: black;\n  padding: 15px;\n  margin-bottom: 5px;\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  \n  gap: 10px;\n  &: hover {\n    box-shadow: 0px 10px 20px 5px rgba(0, 0, 0, 0.5);\n    transform: translateY(-5px);\n  }\n`;\n\nexport const Container = styled.div`\ndisplay:flex;\nalign-items: center;\nflex-direction: column;`","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","films","setFilms","homeLocation","useLocation","useEffect","getPopularFilms","fetch","method","headers","accept","response","json","data","results","console","error","map","film","to","id","state","src","poster_path","alt","title","Header","styled","TrendingList","TrendingItem","Container","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}