{"version":3,"file":"static/js/387.c3c2c83d.chunk.js","mappings":"gQAGaA,EAAWC,EAAAA,EAAAA,GAAH,4IASRC,EAAWD,EAAAA,EAAAA,GAAH,mG,mBCsCrB,MA9CA,YAA4B,IAAZE,EAAW,EAAXA,QACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,+GAECC,MAAM,sCAAD,OACYN,EADZ,qEAFN,cAEhBO,EAFgB,gBAKHA,EAASC,OALN,OAKhBC,EALgB,OAMtBN,EAAQM,GANc,kDAQtBC,QAAQC,MAAR,MARsB,0DAAH,qDAYvBN,GACD,GAAE,CAACL,IAEAE,GAAQA,EAAKA,MAEb,0BACE,SAACL,EAAD,UACGK,EAAKA,KAAKU,KAAI,SAAAC,GACb,OAAIA,EAAMC,cAEN,UAACf,EAAD,YACE,gBACEgB,IAAG,8CAAyCF,EAAMC,cAClDE,IAAI,GACJC,MAAM,QAEPJ,EAAMK,OANML,EAAMM,IAUlB,IACR,SAMF,SAACC,EAAA,EAAD,GACR,C,uBChDD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOnB,GAEP,YADAa,EAAOb,EAET,CACIkB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  padding: 0;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ngap: 10px;\n`","import React, { useEffect, useState } from 'react';\nimport { CastItem, CastList } from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\n\nfunction Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e0d37982bd2bc72dd4c2ebad432d351&language=en-US`\n        );\n        const data = await response.json();\n        setCast(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (cast && cast.cast) {\n    return (\n      <div>\n        <CastList>\n          {cast.cast.map(actor => {\n            if (actor.profile_path) {\n              return (\n                <CastItem key={actor.id}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/original/${actor.profile_path}`}\n                    alt=\"\"\n                    width=\"250\"\n                  />\n                  {actor.name}\n                </CastItem>\n              );\n            }\n            return null;\n          })}\n        </CastList>\n      </div>\n    );\n  }\n\n  return <Loader />;\n}\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["CastList","styled","CastItem","movieId","useState","cast","setCast","useEffect","fetchMovieDetails","fetch","response","json","data","console","error","map","actor","profile_path","src","alt","width","name","id","Loader","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}